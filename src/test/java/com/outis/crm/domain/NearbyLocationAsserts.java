package com.outis.crm.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NearbyLocationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNearbyLocationAllPropertiesEquals(NearbyLocation expected, NearbyLocation actual) {
        assertNearbyLocationAutoGeneratedPropertiesEquals(expected, actual);
        assertNearbyLocationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNearbyLocationAllUpdatablePropertiesEquals(NearbyLocation expected, NearbyLocation actual) {
        assertNearbyLocationUpdatableFieldsEquals(expected, actual);
        assertNearbyLocationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNearbyLocationAutoGeneratedPropertiesEquals(NearbyLocation expected, NearbyLocation actual) {
        assertThat(expected)
            .as("Verify NearbyLocation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNearbyLocationUpdatableFieldsEquals(NearbyLocation expected, NearbyLocation actual) {
        assertThat(expected)
            .as("Verify NearbyLocation relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getDistance()).as("check distance").isEqualTo(actual.getDistance()))
            .satisfies(e -> assertThat(e.getCoordinates()).as("check coordinates").isEqualTo(actual.getCoordinates()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNearbyLocationUpdatableRelationshipsEquals(NearbyLocation expected, NearbyLocation actual) {
        assertThat(expected)
            .as("Verify NearbyLocation relationships")
            .satisfies(e -> assertThat(e.getProperty()).as("check property").isEqualTo(actual.getProperty()));
    }
}
